@charset "UTF-8";
body,
button,
dd,
dl,
dt,
fieldset,
form,
h1,
h2,
h3,
h4,
h5,
h6,
input,
legend,
li,
ol,
p,
select,
table,
td,
textarea,
th,
ul {
  margin: 0;
  padding: 0;
}

body,
button,
input,
select,
table,
textarea {
  font-size: 100%;
  color: #202020;
  font-family: -apple-system, BlinkMacSystemFont, "Malgun Gothic", "맑은 고딕",
    helvetica, "Apple SD Gothic Neo", sans-serif;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  line-height: inherit;
}

textarea {
  backface-visibility: hidden;
  background-color: transparent;
  border: 0;
  word-break: keep-all;
  word-wrap: break-word;
}

button,
input {
  border-radius: 0;
  border: 0;
}

button {
  background-color: transparent;
}

fieldset,
img {
  border: 0;
}

img {
  vertical-align: top;
}

ol,
ul {
  list-style: none;
}

address,
em {
  font-style: normal;
}

a {
  color: inherit;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

iframe {
  overflow: hidden;
  margin: 0;
  border: 0;
  padding: 0;
  vertical-align: top;
}

mark {
  background-color: transparent;
}

i {
  font-style: normal;
}

/*!
    @param {String} $append: 추가할 class 또는 element
    @param {Number} $pos: 선택 된 클래스 뒤에 append할지 앞에 append할지 선택
*/
.gnb {
  margin-top: 30px;
}
.gnb ul {
  display: flex;
  justify-content: center;
  gap: 20px;
}
.gnb li.active {
  border-bottom: 1px solid #000;
  font-weight: bold;
}

.popup-wrap {
  display: none;
  position: fixed;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
}
.popup-wrap::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  opacity: 0;
}
.popup-wrap.open::before {
  opacity: 1;
  transition: opacity 0.15s;
}

.popup-wrap.open {
  display: block;
}
.popup {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 50%;
  background-color: #fff;
  border-radius: 16px 16px 0 0;
  overflow: auto;
  transform: translateY(100%);
  transition: transform 0.35s ease-in-out;
}
.open .popup {
  transform: translateY(0);
}

.popup-cont {
  height: 1000px;
}
.test .popup {
  top: 50px;
  bottom: 50px;
  left: 50px;
  right: 50px;
  height: auto;
  width: auto;
  max-height: 600px;
  border-radius: 16px;
  display: flex;
  flex-direction: column;
}
.test .popup-header {
  padding: 20px;
  border-bottom: 1px solid #ddd;
}
.test .popup-main {
  flex: 1;
  overflow: auto;
  padding: 0 20px;
}
.test .popup-footer {
  padding: 20px;
  border-top: 1px solid #ddd;
}

.label {
  display: block;
  margin-bottom: 5px;
  font-size: 12px;
  font-weight: bold;
}

.input-wrap {
  margin-top: 10px;
}
.input-wrap input {
  padding: 10px;
  box-sizing: border-box;
  width: 100%;
  height: 40px;
  border: 1px solid #ddd;
}

.select-wrap label {
  display: block;
  padding: 10px;
  box-sizing: border-box;
  height: 40px;
  border: 1px solid #ddd;
}
.select-wrap ul {
  display: none;
  position: relative;
  border: 1px solid #ddd;
  max-height: 0;
  overflow: auto;
  transition: max-height 0.5s;
}
.select-wrap ul li {
  padding: 15px 20px;
}
.select-wrap label.active + ul {
  max-height: 150px;
}
.select-wrap select {
  width: 100%;
  padding: 10px;
  box-sizing: border-box;
  height: 40px;
  border: 1px solid #ddd;
  background-color: #fff;
  border-radius: 0;
}
.select-wrap option {
  width: 100%;
}

:root {
  font-size: 16px;
}

.resize {
  display: flex;
  flex-direction: column;
  height: 100vh;
}
.resize header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  min-height: 2.5rem;
  padding: 0rem 1.25rem;
  background-color: green;
  color: #fff;
}
.resize header h1 {
  margin: 0 auto;
  font-size: 1rem;
}
.resize header button {
  width: 1.875rem;
  height: 1.875rem;
}
.resize-cont {
  overflow: auto;
  flex: 0 auto;
  padding: 0.9375rem;
}
.resize-cont h2 {
  font-size: 1.25rem;
}
.resize-cont .banner {
  box-sizing: border-box;
  padding: 0.9375rem;
  margin-top: 1.25rem;
  background-color: rebeccapurple;
  border-radius: 0.625rem;
  height: 12.5rem;
  color: #fff;
  font-size: 1.5rem;
}
.resize-cont .flex {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 0.3125rem;
  margin-top: 0.9375rem;
  font-size: 14px;
}
.resize-cont .flex div {
  box-sizing: border-box;
  padding: 0.625rem 0rem;
  min-height: 3.125rem;
  background-color: yellowgreen;
}
.resize-footer {
  padding: 0.9375rem 1.25rem;
  border-top: 1px solid #ddd;
}
.resize-footer button {
  width: 100%;
  height: 2.5rem;
  background-color: darkcyan;
  color: #fff;
  font-weight: bold;
}

.btn {
  --button-height: 40px;
  --btn-radius: 5px;
  --btn-bg: green;
  --btn-border-color: green;
  --btn-text-color: white;
  width: 100%;
  height: var(--btn-height);
  border-radius: var(--btn-radius);
  background-color: var(--btn-bg);
  border: 1px solid var(--btn-border-color);
  color: var(--btn-text-color);
}
.btn[class*="btn-line"] {
  --btn-bg: white;
  --btn-border-color: gray;
  --btn-text-color: dark gray;
}
.btn.btn-xxxl {
  --btn-height: 40px;
}
.btn.btn-xxl {
  --btn-height: 32px;
}
.btn.btn-xl {
  --btn-height: 28px;
}
.btn.btn-l {
  --btn-height: 24px;
}
.btn.btn-m {
  --btn-height: 18px;
}
.btn.btn-s {
  --btn-height: 14px;
}

.test .btn {
  --btn-height: 20px;
}

html,
body {
  height: 100%;
}

.flex-btn {
  display: flex;
  flex-direction: column;
  height: 100%;
}
.flex-btn main {
  overflow: auto;
  flex: 0 100%;
}

header {
  min-height: 40px;
  background-color: gray;
}

footer {
  border-top: 1px solid #ddd;
  padding: 20px 10px 10px;
}

.btn {
  background-color: green;
}

.inner-scroll {
  width: 100%;
  height: 2000px;
  border: 1px solid red;
}

.fixed-btn {
  padding: 40px 0 70px;
}
.fixed-btn header {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
}
.fixed-btn main {
  display: block;
  height: auto;
}
.fixed-btn footer {
  box-sizing: border-box;
  width: 100%;
  position: fixed;
  bottom: 0;
  left: 0;
}

main {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 500px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
